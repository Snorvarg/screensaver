<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NB81AzXpNtA3uTikOZA6fjttPF49UT5FPztAM0EsQiZDIkQgRR9GIEcjSCdJLUo0SzxMR01TTmBPb1B/
        UZFSpVO6VNFV6VcCWB5ZOlpYW3hcmV28XuBgBmEtYlZjgGSsZdlnCGg4aWlqnWvRbQduP294cLJx7nMr
        dGp1qnbseC95dHq6fAF9Sn6Vf+GBLoJ8g82FHoZxh8WJG4pyi8uNJY6Bj92RPJKbk/2VX5bDmCiZj5r3
        nGCdy583oKWiFKOFpPamaafeqVSqy6xErb6vObC2sjSztLU0tre4Orm/u0W8zb5Wv+DBbML5xIfGF8eo
        yTvKzsxjzfrPktEr0sXUYdX+15zZPNrd3H/eI9/I4W7jFuS/5mnoFOnB62/tH+7Q8ILyNfPq9aD3V/kQ
        +sr8hf5B////2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcp
        LDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAB9AH0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDxSiiigBOacB7UqqSemc1r6JoF/rt/HY6dbNPcuCVQEDpz1OBQBkbD2FIVNd9J8LfF
        sHD6HcEj+4Q4/wDHSaoXPgTxFaqTNomoIo7/AGdsfyoA5Ag0YNbE+kXMB2zQSxkdQ6EGqzWTD+H9KAKG
        KMVcNo3pTDbN6UAVsUVObdvSkMDelAEJpKlMR9KYRjtQA2iiigApRnNJT0UkgUATW8ZZhX0d8GvCa6Xo
        p1y5jxc3o2xZ/hi/+yPP0xXjvgTwy/iXxJaaeFIiLb52H8MY+8f6fUivrCCGKCCOGFAkcahVUdAB0oAk
        FLVLUdRtNLtHuby4jghQZZ5G2gV5lq/xt060Zo9NtJbsjgSyNsU/zJ/SgD1aSNJV2uiup7MuRWbceGdB
        uyTcaLp8hPUtbIT/ACryO2+Ot8Jl+06VbPGTyI3Kt+uf5V6V4X8c6R4qTbZzFLoDLW8gw4/ofwoAWf4e
        +Ep/v6HbADsgK/yIrHuPhZ4RnLEaa0RPeOdxj8zXePkIcck8UxIscnrQB5y/wV8NTqSsl/CT0xKp/mpr
        OuPgPpz5+z6xcR/9dIVb+RFetkhRk8UowRwc0AeGXXwEu+ltrVs4/wCmsLL/ACJryzxR4au/DOs3GmXo
        UyxHIdM7XB5BGcV9jHp74ryb42+G/tmk2+uQpmW1bypiB1Qn5T+B/wDQqAPnFhzTasTx7WIxjFQdKAAd
        as20RZgOtQIpJFdp4D8MyeJfElpYhT5JbzJ2H8MYxn/D6kUAe0fB3wuNJ8OHVZ48XN/ymRysQ6fn1/Ku
        313W7Pw/pM+o3r7YYhnaOrE9APc1ejjS3t1jjQLHGu1VHYDoK8G+NPiKS51uPR43xBaKGkAPBkbn9AR+
        dAHGeL/Gmo+JtRa4u5SIlY+TAG+WMf4+9ci9wxPWmTSEsecmoc0ATCdgc5rY0XV7nTr2G7tJWiuIm3I4
        7GsEZzVi2PI/KgD7H8La5H4j8O2epxgKZlxIn91xww/OruqapZ6PYS3t/OsNvEMsx/kPU15p8C7ySbQN
        StGyUhnWRM9twP8A8TXIfGLxJPeeJG0tJSbaxUAoMgGQgEn3xnH4UAa2ufG65N066VYwpCvCvcZZj74B
        GPpWPbfGrxDHOHkWzlTuhiwD+RryiWcknmmJKQRzQB9XeC/iHp/i7MAiNrfKuTCzZDD1U98f1rqdRsIN
        U065sbld0E8bRuPUEV8jeHtXuNL1S2vbZys0Egdcd8dvx6V9e2tyl1ZQ3SfcljWRfoRmgD5A8TaNNout
        Xemz/wCst5ChOPveh/EYP41zzAhq9x+OGgbL6212FPknXyJj/tj7p/Ecf8BrxKRMOQRQBLbRbmHH1r6a
        +EnhYaJ4aXULhMXl+Fc5HKx/wj8c5/GvFfh54ZbxJ4otbNlJt1Pm3B7BBjP59Pxr6sjUIoRQAqjAA6AU
        AHUEV8rfEkufG2r788XDAZ9OK+qyce1fPfxo0FrPxP8A2ginyb5AxIGQHXAP9D+NAHjr/eNMqxLEQTxi
        ogh9KAGjNWLZCWXrnPFNjhLHpXUeFPC1/wCItUjsrKMlmwXkI+WNf7x+lAHsnwMsZIfD2o3bDCzXCovv
        tB/+KrgPi1ok2n+NLyYofJu8TRNjg5A3fka+gtA0a28P6JbaZa/6uBcFj1Zu5P1NV/E3hfTvFWnfY9QR
        sKS0ciHDI3saAPjmWJg3SmpGd3SvYda+CmuW8rHT3gv4ckqQwR/xDcfkaybH4R+J7i5WOWxW2XdzJNKu
        0f8AfOT+lAHH6Jps9/f29pbIXmmcIqjqc19b2kP2OwtrQcrBEsQPrtAH9K5Xwd8P9O8Jj7QW+06gVwZy
        uAnsorr6AMPxfoq+IPC19p+AZWjLwnHR15X/AA/GvlC5hKzMCNhHBBFfZfOeK+a/il4fGieMZ9iH7Pdj
        7RFj3PzD/vrNAHqHwg8Pf2V4YOpzJtuNQbcpPaMZ2/nyfxFekpMQcNz714ToHxsubaCG21LS4JIY1Cq1
        s2wgD2OQf0r0bRfiP4a1ookd+tvO3AiuR5Z/M5H60AdvwRkVkeIvDth4l0x7G/QlCcq6nDI3Yj3q6kpA
        BVgynkEHINWEdW6daAPnvXfgzr1pcOdPWK/t+qsHCPj3U9/pWDF8LfFckwjGjTgk4JYgKPxJxX1LRQB4
        X4f+B927rJrd3HbRDkxQfO5/HoPwzXrmiaJpfhuxFpptusUZ5YjlnPqT3rXPPFRLDhiT0HSgB6EsMkY9
        KfTSQoyTgVA7luBwKAHSTHJVfzqHnqe9FH+P60AFHHfP4dawvEfi/R/C8O/ULn98RlLePmRvw7D3NeJe
        LPivq2th7a0Y2Fkcjy4my7D/AGm/oKAPV/FPxL0Xw0rwo4vb5c4ghfKg/wC03b6DNeCeLPGOpeLdQS41
        CQbYsiGKEALGDjj36Dk+lc7Ncls8/jVUuSetADkkKmrEd2R3qmKKAOs0bxprWiMDYalPEo/g3bkP/ATk
        fpXouifG+6Qqmr2EU6gDMtudj/keD+YrxBXOetTRM2QBQB9Y6N8R/DWsBVTUFglY8R3I2Efj0P511qOs
        iB0ZWUjIKnINfKng7w7f+JNVjsrNcD70srfdjX1P+FfTWhaNa6DpUVhaA7IxksfvOe5P1oA1KaxwpNZ2
        uaouk6PdXnVooyVBHBboP1xVu1Dm1j84gyFRvwMc9/1oAYzljk/gKQBmPAyapatNdWMX2m2i89YjmSJf
        vsncr7j0781Lp2o29/ZR3VpKJIJBlSP88H2oAdf3MOmWEt7dsVhiXc5VSx/IV454q+Ll7KsltocX2OLp
        9ok5kb6dl/nXtwlDDDDI6HivMvHXwrt9Wjl1DQVSG7HLW4OEk/3f7p/SgD5+v7+e5neaeRpJXJLu7ZJN
        Z7ysT1rT1LTLmxupLa5geGaMlXjddrKaynQqelADSaTJpTSUAFFFKKAHIuTXQ+G/D97r+qw2GnxGSeX/
        AL5Udy3oB61k6ZZS6jfwWkITzJWCqXcKo68kngAe9fQHhXVvAvw50c27azBealIM3M1sDLvb+6pGQFH1
        9+9AHd+EvC9n4R0VbK2AaQ4aeYjmRvX6egrYklJIC8e4rynUfjnpikix0u4nAPBlkVB+mTXMX/xv1qUM
        LS0s7cE8Egu388fpQB6R40vA9/oWig/NeXqNIP8AYXH+P6V26SqqgEdAMYr5RvfHuu6hrVvqs99m8txt
        hcRqAvXtjHeugsfjN4mt9vnSWt0B/wA9IcE/984oA+jpCrrkHkc1xWqJP4SvpNXsY2k0qVs3tqnWM/8A
        PRf6/wCTXGWHxzU4F/o4xxl4Jv6MP6109l8WfCV+vlz3EltvGGS5hJU/985FAHY2Op2Wo28c9pdRTRyK
        CpVsmrQJHIyPQ9K+dvHOj2mnTHWPD1/Bc6VKwJ8iYM1sx7HHIHoa5e08Za3YkG21a9j7ALOwH5dKAPo3
        xd4K0zxfZlbpRDeKuIrtBl1+v94fWvnLxZ4Q1LwtfG31CDCMT5U6DMcg9j/Q81vWfxe8VWmAb9LhR2nh
        U/ywf1rRufjFLq9i9jr/AIfsL+0f7yIzRnPqCd2CPUYoA8ncYNR4rQ1RrB76RtNSdLVuUWdgzr7ZHXHr
        iqNACUUUUAPViKkExFQUUATmc560wyH1qOigBxc+tKHI70ylFAEyzEd6cJz61WooAmaUnvTC59aZSUAS
        Bz60bz65plFACk0lFFAH/9k=
</value>
  </data>
</root>